import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import '../bloc/diary_bloc.dart';
import 'widgets/widgets.dart';

class DiaryPage extends StatelessWidget {
  const DiaryPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('–î–Ω–µ–≤–Ω–∏–∫')),
      body: RefreshIndicator(
        onRefresh: () async {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
          context.read<DiaryBloc>().add(DiaryRequested());
        },
        child: BlocBuilder<DiaryBloc, DiaryState>(
          builder: (context, state) {
            if (state is DiaryLoading) {
              return const Center(child: CircularProgressIndicator());
            } else if (state is DiaryLoadSuccess) {
              if (state.entries.isEmpty) {
                // –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π –ø—É—Å—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                return const Center(
                  child: Text(
                    '–ó–∞–ø–∏—Å–µ–π –¥–Ω–µ–≤–Ω–∏–∫–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–π—Ç–µ!',
                    style: TextStyle(fontSize: 16, color: Colors.grey),
                  ),
                );
              }
              // –ï—Å–ª–∏ –∑–∞–ø–∏—Å–∏ –µ—Å—Ç—å, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ö –≤ —Å–ø–∏—Å–∫–µ
              return ListView.builder(
                itemCount: state.entries.length,
                itemBuilder: (context, index) {
                  final entry = state.entries[index];
                  return ListTile(
                    leading: Text(
                      entry.emoji.isNotEmpty
                          ? entry.emoji
                          : 'üìò', // –≠–º–æ–¥–∑–∏ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                      style: const TextStyle(fontSize: 24),
                    ),
                    title: Text(entry.title),
                    subtitle: Text(entry.description),
                    onTap: () {
                      // –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç
                      Navigator.of(context).push(
                        MaterialPageRoute(
                          builder:
                              (_) => DiaryEntryPage(
                                entry: entry,
                                onSave: (updatedEntry) {
                                  context.read<DiaryBloc>().add(
                                    DiaryEntryUpdated(
                                      oldEntry: entry,
                                      updatedEntry: updatedEntry,
                                    ),
                                  );
                                },
                              ),
                        ),
                      );
                    },
                    trailing: Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        IconButton(
                          icon: const Icon(Icons.edit, color: Colors.blue),
                          onPressed: () {
                            Navigator.of(context).push(
                              MaterialPageRoute(
                                builder:
                                    (_) => DiaryEntryPage(
                                      entry: entry,
                                      onSave: (updatedEntry) {
                                        context.read<DiaryBloc>().add(
                                          DiaryEntryUpdated(
                                            oldEntry: entry,
                                            updatedEntry: updatedEntry,
                                          ),
                                        );
                                      },
                                    ),
                              ),
                            );
                          },
                        ),
                        IconButton(
                          icon: const Icon(Icons.delete, color: Colors.red),
                          onPressed: () {
                            context.read<DiaryBloc>().add(
                              DiaryEntryDeleted(entry),
                            );
                          },
                        ),
                      ],
                    ),
                  );
                },
              );
            } else if (state is DiaryLoadFailure) {
              return Center(
                child: Text(
                  '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞: ${state.error}',
                  style: const TextStyle(color: Colors.red),
                ),
              );
            }
            return const SizedBox.shrink();
          },
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          Navigator.of(context).push(
            MaterialPageRoute(
              builder:
                  (_) => DiaryEntryPage(
                    onSave: (newEntry) {
                      context.read<DiaryBloc>().add(DiaryEntryAdded(newEntry));
                    },
                  ),
            ),
          );
        },
        child: const Icon(Icons.add),
      ),
    );
  }
}
